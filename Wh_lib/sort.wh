function main:
	read G, H, I, J, K
	%
        L := (list G H I J K );
        R := (sort L);
        for L do
            R := (sort R)
        od;
        A := (hd R);
        R := (tl R);
        B := (hd R);
        R := (tl R);
        C := (hd R);
        R := (tl R);
        D := (hd R);
        R := (tl R);
        E := (hd R)
        
    %
    write A, B, C, D, E

function superieur: 
    read A, B
    %
        T := (cons nil nil);
        S := nil;
        for B do
            S := (cons nil S);
            if S =? A then
                T := nil
            fi
        od
    %
    write T

function sup:
    read L
    %
        K := (hd L);
        O := (tl L);
        U := (hd O);
        if (superieur K U) then
            A := (cons K (tl O));
            A :=(cons U A)
        else
            A := L
        fi
    %
    write A

function sort:
    read L
    %
        O := (tl L);
        T := O =? nil;
        if T then
            L := (cons (hd L) nil)
        else
            L := (sup L);
            O := (tl L);
            L := (cons (hd L) (sort O))
        fi
    %
	write L